<UserControl x:Class="ChessProjectFinal.View.BoardView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:view="clr-namespace:ChessProjectFinal.View"
             xmlns:converters="clr-namespace:ChessProjectFinal.Converters"
             mc:Ignorable="d" 
             
            
             >

   <UserControl.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></converters:BoolToVisibilityConverter>
        <converters:PointToColorConverter x:Key="PointToColorConverter"></converters:PointToColorConverter>
        <converters:HideOnNullConverter x:Key="HideOnNullConverter"></converters:HideOnNullConverter>
        <converters:PieceToDisplayConverter x:Key="PieceToDisplayConverter"></converters:PieceToDisplayConverter>
        <converters:InvertBooleanConverter x:Key="InvertBooleanConverter"></converters:InvertBooleanConverter>
        <converters:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter"></converters:InvertedBoolToVisibilityConverter>
    </UserControl.Resources>
   <UserControl.Background>
        <SolidColorBrush Color="LightGray"></SolidColorBrush>
   </UserControl.Background>
  
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Game">
                <MenuItem Header="New Game" Command="{Binding NewGameCommand}"></MenuItem>
                <MenuItem Header="Restart" Command="{Binding RestartCommand}"></MenuItem>
                <MenuItem Header="Stop Game" Command="{Binding StopCommand}"></MenuItem>
                <MenuItem Header="Edit Mode" IsCheckable="True" Command="{Binding EditModeCommand}"  IsEnabled="{Binding Game.IsBusy,Converter={StaticResource InvertBooleanConverter}}"  ></MenuItem>
                <MenuItem Header="Settings"></MenuItem>
            </MenuItem>
        </Menu>
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical">
                <StackPanel.Resources>
                    <Style TargetType="Label">
                        <Setter Property="Margin" Value="3,22,3,22"></Setter>
                        <Setter Property="FontSize" Value="14px"></Setter>
                        <Setter Property="FontWeight" Value="Bold"></Setter>
                        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                    </Style>
                </StackPanel.Resources>
                <Label Content="8" ></Label>
                <Label Content="7" ></Label>
                <Label Content="6" ></Label>
                <Label Content="5" ></Label>
                <Label Content="4" ></Label>
                <Label Content="3" ></Label>
                <Label Content="2" ></Label>
                <Label Content="1" ></Label>
            </StackPanel>
            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="Label">
                        <Setter Property="Margin" Value="28,0,28,0"></Setter>
                        <Setter Property="FontSize" Value="14px"></Setter>
                        <Setter Property="FontWeight" Value="Bold"></Setter>
                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                    </Style>
                </StackPanel.Resources>
                <Label Content="A" ></Label>
                <Label Content="B" ></Label>
                <Label Content="C" ></Label>
                <Label Content="D" ></Label>
                <Label Content="E" ></Label>
                <Label Content="F" ></Label>
                <Label Content="G" ></Label>
                <Label Content="H" ></Label>
            </StackPanel>
            <Border BorderBrush="Black" BorderThickness="5" Grid.Row="0" Grid.Column="1">
               <ItemsControl ItemsSource="{Binding Game.Board.Squares}" IsHitTestVisible="{Binding Game.IsBusy, Converter={StaticResource InvertBooleanConverter}}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid >
                                <Grid.LayoutTransform>
                                    <ScaleTransform ScaleX=" 1" ScaleY="-1"/>
                                </Grid.LayoutTransform>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                            </Grid>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate >
                            <Border BorderThickness="2" BorderBrush="#B3ADAD"  Width="73px" Height="73px" >
                                <Grid>
                                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="1.0" Fill="{Binding Coords,Converter={StaticResource PointToColorConverter}}" Visibility="Visible" IsHitTestVisible="False"></Rectangle>
                                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="1.0" Fill="#C7DFF6" Visibility="{Binding IsValidMove,Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="False"/>
                                    <Image     HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{Binding Occupant ,Converter={StaticResource PieceToDisplayConverter}}"  IsHitTestVisible="False"></Image>
                                    <Grid Visibility="{Binding DataContext.EditorMode,RelativeSource={RelativeSource AncestorType=view:BoardView},Converter={StaticResource InvertedBoolToVisibilityConverter}}">
                                        <Button   HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Command="{Binding DataContext.ActivatePieceCommand, RelativeSource={RelativeSource AncestorType=view:BoardView}}" CommandParameter="{Binding }" Visibility="{Binding Occupant, Converter={StaticResource HideOnNullConverter}}" >
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Grid>
                                                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button Visibility="{Binding IsValidMove,Converter={StaticResource BoolToVisibilityConverter}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   Command="{Binding DataContext.MakeMoveCommand, RelativeSource={RelativeSource  AncestorType=view:BoardView}}" CommandParameter="{Binding}" >
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Grid>
                                                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </Grid>
                                    <Grid IsHitTestVisible="{Binding DataContext.EditorMode ,RelativeSource={RelativeSource AncestorType=view:BoardView}}" >
                                        <Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Command="{Binding DataContext.BoardEditorViewModel.ClickSquareCommand, RelativeSource={RelativeSource AncestorType=view:BoardView}}" CommandParameter="{Binding }" Background="Transparent"  >
                                            <Button.Template>
                                               <ControlTemplate>
                                                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent"></Rectangle>
                                               </ControlTemplate>
                                             </Button.Template>
                                            <Button.InputBindings>
                                                <MouseBinding MouseAction="RightClick" Command="{Binding DataContext.BoardEditorViewModel.EmptySquareCommand, RelativeSource={RelativeSource AncestorType=view:BoardView}}" CommandParameter="{Binding}"></MouseBinding>
                                            </Button.InputBindings>
                                        </Button>
                                     
                                            
                                      
                                    </Grid>
                                 </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Grid.Column" Value="{Binding Column}"></Setter>
                            <Setter Property="Grid.Row" Value="{Binding Row}"></Setter>
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1" ScaleY="-1"/>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Border>
            <Grid Grid.Row="0" Grid.Column="2" DataContext="{Binding BoardEditorViewModel}" Visibility="{Binding DataContext.EditorMode, Converter ={StaticResource BoolToVisibilityConverter},RelativeSource={RelativeSource  AncestorType=view:BoardView}}">
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <ItemsControl Grid.Column="1" Grid.Row="0" Grid.RowSpan="5" ItemsSource="{Binding WhitePieces}" VerticalAlignment="Center">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel></StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border BorderThickness="1.5" BorderBrush="Black">
                                <Button  Margin="2" Width="65" Height="65" HorizontalAlignment="Stretch " VerticalAlignment="Stretch" Command="{Binding DataContext.SelectPieceCommand, RelativeSource={RelativeSource AncestorType=Grid}}" CommandParameter="{Binding }" >
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Border BorderThickness="1" BorderBrush="Black">
                                                <Image Source="{Binding . ,Converter={StaticResource PieceToDisplayConverter}}"></Image>
                                            </Border>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <ItemsControl Grid.Column="2" Grid.Row="0" Grid.RowSpan="5" ItemsSource="{Binding BlackPieces}" VerticalAlignment="Center">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel></StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border BorderThickness="1.5" BorderBrush="Black">
                                <Button  Margin="2" Width="65" Height="65" HorizontalAlignment="Stretch " VerticalAlignment="Stretch" Command="{Binding DataContext.SelectPieceCommand, RelativeSource={RelativeSource AncestorType=Grid}}" CommandParameter="{Binding }" >
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Border BorderThickness="1" BorderBrush="Black">
                                                <Image Source="{Binding . ,Converter={StaticResource PieceToDisplayConverter}}"></Image>
                                            </Border>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Label Content="White Castle King Side" Grid.Row="0" Grid.Column="3" FontSize="15" VerticalAlignment="Center"/>
                <CheckBox Grid.Row="0" Grid.Column="4" VerticalAlignment="Center" IsChecked="{Binding WhiteCastleKingSide, Mode=TwoWay}" Margin="5"/>
                <Label Content="White Castle Queen Side" Grid.Row="1" Grid.Column="3" FontSize="15" VerticalAlignment="Center"></Label>
                <CheckBox Grid.Column="4" Grid.Row="1" VerticalAlignment="Center" IsChecked="{Binding WhiteCastleQueenSide, Mode=TwoWay}" Margin="5"></CheckBox>
                <Label Content="Black Castle King Side" Grid.Row="2" Grid.Column="3" VerticalAlignment="Center" FontSize="15"></Label>
                <CheckBox Grid.Column="4" Grid.Row="2" VerticalAlignment="Center" IsChecked="{Binding BlackCastleKingSide, Mode=TwoWay}"  Margin="5"></CheckBox>
                <Label Content="Black Castle Queen Side" Grid.Row="3" Grid.Column="3" VerticalAlignment="Center" FontSize="15"></Label>
                <CheckBox Grid.Column="4" Grid.Row="3" VerticalAlignment="Center" IsChecked="{Binding BlackCastleQueenSide, Mode=TwoWay}" Margin="5"></CheckBox>
                <Label Content= "Player Turn" Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3" FontSize="15" ></Label>
                <Button Content="Save Changes" FontSize="16"  Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding DataContext.SaveChangesCommand, RelativeSource={RelativeSource AncestorType=view:BoardView}}" Height="40" Margin="33,25,79,34" Width="140">

                </Button>

                <Button Grid.Row="4" Grid.Column="4" Command="{Binding SwitchColorCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <Ellipse  Width="20" Height="20">
                                <Ellipse.Fill>
                                    <SolidColorBrush Color="{Binding PlayerColor}"></SolidColorBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>
          
                 <Label Grid.Row="2" Grid.Column="1" VerticalAlignment="Center"  HorizontalAlignment="Left" Content="{Binding Game.WhiteSearch.PV}"></Label>
                 <Label Grid.Row="2" Grid.Column="1"  VerticalAlignment="Center"  HorizontalAlignment="Right" Content="{Binding Game.BlackSearch.PV}"></Label>
           
            </Grid >
    </DockPanel>

</UserControl>
